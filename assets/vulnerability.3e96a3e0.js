import{K as u,j as E}from"./index.2a01bdce.js";import{a as i}from"./api.5a77c80b.js";const a=u(),l="https://hgprevio.vicegov.ce.gov.br/api/v1",c="FETCH_VULNERABILITIES",I="FETCH_VULNERABILITY",L="DELETE_VULNERABILITY",T="CLEAR_SELECTED_VULNERABILITY",d="UPDATE_VULNERABILITY",R="CREATE_VULNERABILITY",v="RESET_VULNERABILITIES",h="RESET_ERRORS",p=E("vulnerabilities",{state:()=>({vulnerabilities:[],selectedVulnerability:[],isFieldFocusRegistered:!1,errors:{}}),getters:{getVulnerabilities:e=>e.vulnerabilities,getVulnerability:e=>e.selectedVulnerability,getErrors:e=>e.errors},actions:{validateInput(e,t){const r={};return(!e||typeof e=="string"&&e.trim()==="")&&(r[t]="Campo obrigat\xF3rio"),this.errors=r,!Object.keys(r).length},async[c](){try{const e=await i.get(`${l}/vulnerabilities`);this.vulnerabilities=e.data}catch(e){this.errors.api=e.message}},[v](){},[h](){this.errors={}},async[I](e){try{const t=await i.get(`${l}/vulnerabilities/${e}`);this.selectedVulnerability=t.data}catch(t){this.errors.api=t.message}},async[T](){this.selectedVulnerability=[]},async[R](e,t,r,s){if(this.validateInput(e,"description")&&this.validateInput(t,"beneficiaries")&&this.validateInput(r,"program_or_project_to_offer")&&this.validateInput(s,"category_id"))try{return await i.post(`${l}/vulnerabilities/`,{description:e,beneficiaries:t,program_or_project_to_offer:r,category_id:s}),await this.FETCH_VULNERABILITIES(),a.success("Vulnerabilidade criada com sucesso!"),!0}catch(o){return this.errors.api=o.message,a.error("Houve um erro ao criar a vulnerabilidade."),!1}return!1},async[d](e,t,r,s,o){if(this.validateInput(t,"description")&&this.validateInput(r,"beneficiaries")&&this.validateInput(s,"program_or_project_to_offer")&&this.validateInput(o,"category_id"))try{return await i.put(`${l}/vulnerabilities/${e}`,{description:t,beneficiaries:r,program_or_project_to_offer:s,category_id:o}),await this.FETCH_VULNERABILITIES(),a.success("Vulnerabilidade atualizada com sucesso!"),!0}catch(n){return this.errors.api=n.message,a.error("Houve um erro ao atualizar a vulnerabilidade."),!1}return!1},async[L](e){try{return await i.delete(`${l}/vulnerabilities/${e}`),await this.FETCH_VULNERABILITIES(),a.success("Vulnerabilidade exclu\xEDda com sucesso!"),!0}catch(t){return this.errors.api=t.message,a.error("Houve um erro ao excluir a vulnerabilidade."),!1}}}});export{p as u};
