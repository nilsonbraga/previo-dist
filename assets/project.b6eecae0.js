import{K as d,j as R}from"./index.2a01bdce.js";import{a as p}from"./api.5a77c80b.js";const a=d(),u="https://hgprevio.vicegov.ce.gov.br/api/v1",P="FETCH_PROJECTS",j="FETCH_PROJECT",C="DELETE_PROJECT",v="CLEAR_SELECTED_PROJECT",O="UPDATE_PROJECT",_="CREATE_PROJECT",I="FILTER_PROJECTS",S="RESET_PROJECTS",J="RESET_ERRORS",m=R("projects",{state:()=>({projects:[],selectedProject:[],filteredProjects:[],isFieldFocusRegistered:!1,errors:{}}),getters:{getProjects:t=>t.projects,getProject:t=>t.selectedProject},actions:{validateInput(t,e){const s={};return(!t||typeof t=="string"&&t.trim()==="")&&(s[e]="Campo obrigat\xF3rio"),this.errors=s,!Object.keys(s).length},async[P](){try{const t=await p.get(`${u}/projects`);this.projects=t.data}catch(t){this.errors.api=t.message}},[S](){Object.assign(this,defaultState)},[J](){this.errors={}},[I](t){this.filteredProjects=this.projects;let s=this.projects.filter(r=>r.initiative.id==t);this.filteredProjects=s},async[j](t){try{const e=await p.get(`${u}/projects/${t}`);this.selectedProject=e.data}catch(e){this.errors.api=e.message}},async[v](){this.selectedProject=[]},async[_](t,e,s,r,i,o,c,E,n,h){if(this.validateInput(t,"initiative_id")&&this.validateInput(e,"vulnerability_id")&&this.validateInput(s,"title")&&this.validateInput(r,"description")&&this.validateInput(i,"reason")&&this.validateInput(o,"main_goal")&&this.validateInput(c,"project_output")&&this.validateInput(E,"goals")&&this.validateInput(n,"expected_results")&&this.validateInput(h,"indicators"))try{return await p.post(`${u}/projects/`,{initiative_id:t,vulnerability_id:e,title:s,description:r,reason:i,main_goal:o,project_output:c,goals:E,expected_results:n,indicators:h}),await this.FETCH_PROJECTS(),this.FILTER_PROJECTS(t),a.success("Projeto criado com sucesso!"),!0}catch{return a.error("Houve um erro ao criar o projeto."),!1}return!1},async[O](t,e,s,r,i,o,c,E,n,h,l){if(this.validateInput(e,"initiative_id")&&this.validateInput(s,"vulnerability_id")&&this.validateInput(r,"title")&&this.validateInput(i,"description")&&this.validateInput(o,"reason")&&this.validateInput(c,"main_goal")&&this.validateInput(E,"project_output")&&this.validateInput(n,"goals")&&this.validateInput(h,"expected_results")&&this.validateInput(l,"indicators"))try{return await p.put(`${u}/projects/${t}`,{initiative_id:e,vulnerability_id:s,title:r,description:i,reason:o,main_goal:c,project_output:E,goals:n,expected_results:h,indicators:l}),await this.FETCH_PROJECTS(),this.FILTER_PROJECTS(this.selectedProject.initiative_id),a.success("Projeto atualizado com sucesso!"),!0}catch(T){return this.errors.api=T.message,a.error("Houve um erro ao atualizar o projeto."),!1}return!1},async[C](t){try{await p.delete(`${u}/projects/${t}`),await this.FETCH_PROJECTS(),this.FILTER_PROJECTS(this.selectedProject.initiative_id),a.success("Projeto exclu\xEDdo com sucesso!")}catch(e){this.errors.api=e.message,a.error("Houve um erro ao excluir o projeto.")}}}});export{m as u};
